Override All Other Styles by using Important
Yay! We just proved that in-line styles will override all the CSS declarations in your style
element.

But wait. There's one last way to override CSS. This is the most powerful method of all. But before
we do it, let's talk about why you would ever want to override CSS.

In many situations, you will use CSS libraries. These may accidentally override your own CSS. So
when you absolutely need to be sure that an element has specific CSS, you can use !important

Let's go all the way back to our pink-text class declaration. Remember that our pink-text class was
overridden by subsequent class declarations, id declarations, and in-line styles.

Let's add the keyword !important to your pink-text element's color declaration to make 100% sure
that your h1 element will be pink.

An example of how to do this is:

color: red !important;

Run tests (ctrl + enter)
  Reset Help  Bug
  Your h1 element should have the class pink-text.
  Your h1 element should have the class blue-text.
  Your h1 element should have the id of orange-text.
  Your h1 element should have the inline style of color: white.
  Your pink-text class declaration should have the !important keyword to override all other
  declarations.
  Your h1 element should be pink.
